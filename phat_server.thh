#include <string>
#include "json.hh"

namespace phat {

////////////////////////////////////////////////////////////////////////////////

class Phat_Server
{
private:
  bool i_am_master_;
  tamer::event <> elect_me_;
  typedef enum { FILE=1, DIR } Filetype_t;
  int listen_port_;

  Json fs_image_; // ALL DATA EVER.
  Json* traverse_files(Json& root, Json path);
public:
  Phat_Server();
  Phat_Server(int port);

  void run_master_server();
  void run_replica_server();

  // Utility functions
  tamed void handle_new_connections(int port);
  tamed void read_and_dispatch(tamer::fd client);

  // Internal service routines
  Json get_master(Json args);
  Json get_replica_list(Json args);

  // Service routines
  Json getroot(Json args);
  Json open(Json root, const char* subpath);
  Json mkfile(Json root, const char* subpath, const char* data);
  Json mkdir(Json root, const char* subpath);
  const char* getcontents(Json root, const char* subpath);
  Json putcontents(Json root, const char* subpath, const char* data);
  // FIXME implement the rest...

};


} // namespace phat
